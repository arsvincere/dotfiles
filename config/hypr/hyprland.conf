# Import ---------------------------------------------------------------------{{{

# Source a file (multi-file configs)
# source = ~/.config/hypr/myColors.conf
# }}}
# Monitor -----------------------------------------------------------------{{{

# monitor = , preferred, auto, auto
monitor=DP-1,1920x1080@60,0x0,1

# }}}
# Environment -------------------------------------------------------------{{{

env = XCURSOR_SIZE,24
env = QT_QPA_PLATFORMTHEME,qt6ct
env = EDITOR,nvim
env = XDG_CURRENT_DESKTOP,Hyprland
env = XDG_SESSION_TYPE,wayland
env = XDG_SESSION_DESKTOP,Hyprland
env = ELECTRON_OZONE_PLATFORM_HINT,auto

# }}}
# Autostart ---------------------------------------------------------------{{{

# hyprland utils
exec-once = waypaper --restore --fill stretch --backend swaybg
exec-once = waybar
exec-once = wl-clipboard-history -t
exec-once = wl-paste --wathc cliphist store
exec-once = wl-clip-persist --clipboard regular --display wayland-1
exec-once = /usr/lib/xfce-polkit/xfce-polkit
exec-once = mako

# my utils
exec-once = yandex-disk start
exec-once = [workspace 12] google-chrome-stable https://wooordhunt.ru/edu/start

# for gtk theme
exec = gsettings set org.gnome.desktop.interface gtk-theme "Kanagawa-Border"
exec = gsettings set org.gnome.desktop.interface icon-theme "Kanagawa"
exec = gsettings set org.gnome.desktop.interface cursor-theme 'Nordzy-cursors'
# exec = gsettings set org.gnome.desktop.interface font-name ''

# ХЗ
exec-once = systemctl --user import-environment WAYLAND_DISPLAY XDG_CURRENT_DESKTOP
exec-once = dbus-update-activation-environment --systemd WAYLAND_DISPLAY XDG_CURRENT_DESKTOP
exec = systemctl --user import-environment QT_QPA_PLATFORMTHEME

# }}}
# Input -------------------------------------------------------------------{{{

input {
    kb_layout = us, ru
    kb_options = grp:alt_shift_toggle
    repeat_rate = 32
    repeat_delay = 256
    follow_mouse = false  #  select window under cursor
    sensitivity = 0 # -1.0 to 1.0, 0 means no modification.
    touchpad {
        natural_scroll = yes
    }
}
# }}}
# Theme -------------------------------------------------------------------{{{

general {
    layout = dwindle         # default layout (master, dwindle)
    gaps_in = 2
    gaps_out = 0
    border_size = 1
    # col.active_border = rgba(76946Acc) # green
    # col.active_border = rgba(658594cc) # blue
    # col.active_border = rgba(AAAAAAaa) # white
    col.active_border = rgba(625e5aaa) # dragonBack6
    # col.active_border = rgba(717C7Caa) # katanaGray

    col.inactive_border = rgba(000000ff)
    allow_tearing = false
}

group {
    insert_after_current = false  # always in tail
    col.border_active = rgba(00000000)
    col.border_inactive = rgba(00000000)

    groupbar {
        enabled = true
        font_family = Monospace
        font_size = 11
        height = 16
        priority = 0
        text_color = 0xffDCD7BA
        col.active = 0xff363646
        col.inactive = 0xff1F1F28
        }
}

decoration {
    rounding = 8
    active_opacity = 1.0
    inactive_opacity = 1.0
    fullscreen_opacity = 1.0
    blur {
        enabled = true
        size = 1
        passes = 1
    }
}

animations {
    enabled = yes
    bezier = myBezier, 0.0, 1.0, 0.3, 1.0
    animation = workspaces,     1,  5,   myBezier,  fade, popin 80%
    animation = windows,        1,  5,   default,   popin 80%
    animation = windowsOut,     1,  5,   default,   popin 80%
    animation = border,         1,  10,  default
    animation = fade,           1,  7,   default
    animation = borderangle,    1,  8,   default
}

gestures {
    workspace_swipe = off
}

dwindle {
    preserve_split = yes # you probably want this
}

group {
}

misc {
    force_default_wallpaper = 0 # Set to 0 or 1 to disable the anime mascot wallpapers
    disable_hyprland_logo = true
}

debug {
    disable_logs = false
    # If you are in a TTY, and the Hyprland session that crashed was the
    # last one you launched, the log can be printed with
    # cat $XDG_RUNTIME_DIR/hypr/$(ls -t $XDG_RUNTIME_DIR/hypr/ | head -n 1)/hyprland.log

    # if you are in a Hyprland session, and you want the log of the
    # last session, use
    # cat $XDG_RUNTIME_DIR/hypr/$(ls -t $XDG_RUNTIME_DIR/hypr/ | head -n 2 | tail -n 1)/hyprland.log
}
# }}}
# Window rule -------------------------------------------------------------{{{

# Set bordercolor if window is fullscreen
windowrulev2 = bordercolor rgb(DCA561) rgb(FF9E3B),fullscreen:1

# terminal
windowrulev2 = float, class:^(Alacritty)$, title:^(AlacrittyFloat)$
# windowrulev2 = pin, class:^(Alacritty)$, title:^(AlacrittyFloat)$
windowrulev2 = size 1024 512, class:^(Alacritty)$, title:^(AlacrittyFloat)$
windowrulev2 = move 4 28, class:^(Alacritty)$, title:^(AlacrittyFloat)$

# AVIN Trade System
windowrulev2 = workspace 1, class:^()$, title:^(AVIN - Terminal)$
# windowrulev2 = workspace 1, class:^(com.arsvincere.AVIN)$, title:^(AVIN - Terminal)$
# windowrulev2 = float, class:^(com.arsvincere.AVIN)$, title:^(AVIN)$
windowrulev2 = workspace 1, class:^(python3)$, title:^(AVIN  -  Ars  Vincere)$
windowrulev2 = float, class:^(python3)$, title:^(AVIN)$
windowrulev2 = float, class:^(Alacritty)$, title:^(AVIN)$

# SpeedCrunch
windowrulev2 = float, class:^(SpeedCrunch)$, title:^(SpeedCrunch)$
# windowrulev2 = pin, class:^(SpeedCrunch)$, title:^(SpeedCrunch)$
windowrulev2 = size 600 300, class:^(SpeedCrunch)$, title:^(SpeedCrunch)$
windowrulev2 = move 4 28, class:^(SpeedCrunch)$, title:^(SpeedCrunch)$

# en
windowrulev2 = float, class:^(Alacritty)$, title:^(english)$
# windowrulev2 = pin, class:^(Alacritty)$, title:^(english)$
windowrulev2 = size 1200 600, class:^(Alacritty)$, title:^(english)$
windowrulev2 = move 4 28, class:^(Alacritty)$, title:^(english)$

# btop
windowrulev2 = float, class:^(Alacritty)$, title:^(btop)$
windowrulev2 = size 1200 600, class:^(Alacritty)$, title:^(btop)$

# pavucontrol
windowrulev2 = float, class:^(org.pulseaudio.pavucontrol)$, title:^(Volume Control)$
windowrulev2 = size 600 400, class:^(org.pulseaudio.pavucontrol)$, title:^(Volume Control)$
windowrulev2 = move 1000 28, class:^(org.pulseaudio.pavucontrol)$, title:^(Volume Control)$

# waypaper
windowrulev2 = float, class:^(waypaper)$, title:^(Waypaper)$

# windowrulev2 = group set, class:^(Alacritty)$, title:^(󰞷 pgadmin)$
# windowrulev2 = group set, class:^(Alacritty)$, title:^( nvim)$
# windowrulev2 = group set, class:^(Alacritty)$, title:^( git)$
# windowrulev2 = group set, class:^(Alacritty)$, title:^( xplr)$


# }}}
# Binding -----------------------------------------------------------------{{{

# Identifying keycodes in Wayland
# yay -S wev
# wev | grep 'sym'

#      Mod          Key         Dispatcher      Param
bind = LOGO,        Escape,     killactive,
bind = LOGO CTRL,   Escape,     exit,
bind = LOGO,        bracketleft,exec,           hyprlock
bind = LOGO,        Space,      exec,           alacritty -T AlacrittyFloat
bind = LOGO SHIFT,  Space,      exec,           wofi --show drun
bind = LOGO ALT,    Space,      exec,           alacritty
bind = LOGO,        Return,     fullscreen,     0
bind = LOGO ALT,    Return,     fullscreen,     1
bind = LOGO SHIFT,  Return,     togglefloating,
bind = LOGO,        Tab,        togglespecialworkspace,     magic
bind = LOGO ALT,    Tab,        movetoworkspacesilent,      special:magic
bind = LOGO,        y,          togglesplit,
bind = LOGO,        u,          togglegroup,
bind = LOGO,        comma,      changegroupactive,          b
bind = LOGO,        period,     changegroupactive,          f

# waybar
bind = ,            Help,       exec,           pkill -SIGUSR1 waybar
bind = LOGO,        Help,       exec,           pkill -SIGUSR2 waybar

# Color picker
bind = LOGO,        p,          exec,           hyprpicker -f hex -ra
bind = LOGO SHIFT,  p,          exec,           hyprpicker -f rgb -ra

# Screenshot
bind = ,            PRINT,      exec,           grimshot --notify savecopy screen
bind = SHIFT,       PRINT,      exec,           grimshot --notify savecopy area
# bind = CTRL SHIFT,  PRINT,      exec,           grimshot --notify savecopy active

# Brightness keys
bindl = ,XF86MonBrightnessUp,   exec,           brightness -inc
bindl = ,XF86MonBrightnessDown, exec,           brightness -dec

# Volume keys
# pactl list sinks short
bind = ,XF86AudioMute,          exec,           pactl set-sink-mute 0 toggle
bind = ,XF86AudioMute,          exec,           pactl set-sink-mute 1 toggle
bind = ,XF86AudioMute,          exec,           pactl set-sink-mute 2 toggle
bind = ,XF86AudioRaiseVolume,   exec,           pactl set-sink-volume 0 +5%
bind = ,XF86AudioRaiseVolume,   exec,           pactl set-sink-volume 1 +5%
bind = ,XF86AudioRaiseVolume,   exec,           pactl set-sink-volume 2 +5%
bind = ,XF86AudioLowerVolume,   exec,           pactl set-sink-volume 0 -5%
bind = ,XF86AudioLowerVolume,   exec,           pactl set-sink-volume 1 -5%
bind = ,XF86AudioLowerVolume,   exec,           pactl set-sink-volume 2 -5%

# Player keys
bindl = ,XF86AudioPlay,         exec,           playerctl play-pause
bindl = ,XF86AudioNext,         exec,           playerctl next
bindl = ,XF86AudioPrev,         exec,           playerctl previous

# Start utils on current window
bind = LOGO CTRL,   q,      exec,           alacritty -T note -e nvim ~/diary/note.un
bind = LOGO CTRL,   w,      exec,           google-chrome-stable
bind = LOGO CTRL,   e,      exec,           alacritty -T english -e nvim ~/diary/english.un
bind = LOGO CTRL,   d,      exec,           alacritty -T btop -e btop
bind = LOGO CTRL,   c,      exec,           speedcrunch
bind = LOGO CTRL,   x,      exec,           google-chrome-stable --new-window https://www.tbank.ru/terminal/

# Switch workspaces
bind = LOGO,        a,      workspace,      1
bind = LOGO,        s,      workspace,      2
bind = LOGO,        d,      workspace,      3
bind = LOGO,        f,      workspace,      4
bind = LOGO,        g,      workspace,      5

bind = LOGO,        q,      workspace,      6
bind = LOGO,        w,      workspace,      7
bind = LOGO,        e,      workspace,      8
bind = LOGO,        r,      workspace,      9
bind = LOGO,        t,      workspace,      10

bind = LOGO,        z,      workspace,      11
bind = LOGO,        x,      workspace,      12
bind = LOGO,        c,      workspace,      13
bind = LOGO,        v,      workspace,      14
bind = LOGO,        b,      workspace,      15

# SWITCH workspace & start app
bind = LOGO SHIFT,  a,      exec,           [workspace 1] ~/AVIN/run
bind = LOGO SHIFT,  s,      exec,           [workspace 2] alacritty -e jupyter lab
bind = LOGO SHIFT,  d,      exec,           [workspace 3] ~/avin/src_py/venv_start
bind = LOGO SHIFT,  f,      exec,           [workspace 4] alacritty -e xplr
bind = LOGO SHIFT,  g,      exec,           [workspace 5] thunar

bind = LOGO SHIFT,  q,      exec,           [workspace 6] Telegram
bind = LOGO SHIFT,  w,      exec,           [workspace 7] qutebrowser
bind = LOGO SHIFT,  e,      exec,           [workspace 8] alacritty -e nvim ~/diary/journal
bind = LOGO SHIFT,  r,      exec,           [workspace 9] evince
bind = LOGO SHIFT,  t,      exec,           [workspace 10] inkscape

bind = LOGO SHIFT,  z,      exec,           [workspace 11] alacritty
bind = LOGO SHIFT,  x,      exec,           [workspace 12] google-chrome-stable
bind = LOGO SHIFT,  c,      exec,           [workspace 13] alacritty -e nvim .config
bind = LOGO SHIFT,  v,      exec,           [workspace 14] pgmodeler

# Move active window
bind = LOGO ALT,    a,      movetoworkspace, 1
bind = LOGO ALT,    s,      movetoworkspace, 2
bind = LOGO ALT,    d,      movetoworkspace, 3
bind = LOGO ALT,    f,      movetoworkspace, 4
bind = LOGO ALT,    g,      movetoworkspace, 5

bind = LOGO ALT,    q,      movetoworkspace, 6
bind = LOGO ALT,    w,      movetoworkspace, 7
bind = LOGO ALT,    e,      movetoworkspace, 8
bind = LOGO ALT,    r,      movetoworkspace, 9
bind = LOGO ALT,    t,      movetoworkspace, 10

bind = LOGO ALT,    z,      movetoworkspace, 11
bind = LOGO ALT,    x,      movetoworkspace, 12
bind = LOGO ALT,    c,      movetoworkspace, 13
bind = LOGO ALT,    v,      movetoworkspace, 14
bind = LOGO ALT,    b,      movetoworkspace, 15

# Move focus
bind = LOGO,        h,      movefocus,      l
bind = LOGO,        j,      movefocus,      d
bind = LOGO,        k,      movefocus,      u
bind = LOGO,        l,      movefocus,      r

# Move window
bind = LOGO SHIFT,  h,      swapwindow,     l
bind = LOGO SHIFT,  j,      swapwindow,     d
bind = LOGO SHIFT,  k,      swapwindow,     u
bind = LOGO SHIFT,  l,      swapwindow,     r

# Resize window
bind = LOGO CTRL,   h,      resizeactive, -50     0
bind = LOGO CTRL,   l,      resizeactive,  50     0
bind = LOGO CTRL,   j,      resizeactive,   0    50
bind = LOGO CTRL,   k,      resizeactive,   0   -50

# Mouse
bindm = LOGO,       mouse:272,  movewindow      # left mouse
bindm = LOGO,       mouse:273,  resizewindow    # right mouse
bind = ,            Cancel,     killactive,     # mouse five

